generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model administrator {
  id          String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?   @db.VarChar(255)
  image       String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  content     content[]
}

model content {
  id                  String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  video               String?          @db.VarChar(255)
  photo               String?          @db.VarChar(255)
  general_information String?          @db.VarChar(255)
  administrator_id    String?          @db.Uuid
  content_manager_id  String?          @db.Uuid
  created_at          DateTime         @default(now()) @db.Timestamp(6)
  updated_at          DateTime         @default(now()) @db.Timestamp(6)
  administrator       administrator?   @relation(fields: [administrator_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  content_manager     content_manager? @relation(fields: [content_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model content_manager {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?   @db.Uuid
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  content    content[]
  user       user?     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model subscriber {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email           String            @unique @db.VarChar(255)
  firstName       String?           @db.VarChar(255)
  lastName        String?           @db.VarChar(255)
  roq_user_id     String            @db.VarChar(255)
  tenant_id       String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  administrator   administrator[]
  content_manager content_manager[]
  subscriber      subscriber[]
}
